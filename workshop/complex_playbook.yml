---
# slightly more complex playbook
- name: install and configure postgresql
  hosts: all

  vars:
      db_pass: insecure_master
      hydra_db_user: hydra
      hydra_db_pass: insecure_hydra
      postgresql_packages:
        - postgresql
        - libpq-dev
        - python-psycopg2

  tasks:
    - name: install postgresql packages
      package: name={{ item }} state=present
      become: yes
      with_items: "{{ postgresql_packages }}"
      notify:
        - set postgres password
        - determine postgres directory
        - configure md5 security Debian
        - restart postgres server

    - name: create db_backups directory
      become: yes
      file: owner=postgres group=postgres state=directory path=/opt/pg_backups

    - name: add pg_backups script
      become: yes
      template: src=pg_backups.j2 dest=/opt/pg_backups/pg_daily_double owner=root group=root mode=0755

    - name: add pg_backups cron job
      become: yes
      cron: name="backup pg db" user=postgres job="/opt/pg_backups/pg_daily_double" minute="0" hour="1" state=present

  handlers:
    - name: set postgres password
      become: yes
      become_user: postgres
      postgresql_user: name=postgres password={{ db_pass }}

    - name: determine postgres directory
      shell: ls /etc/postgresql
      register: postgres_version

    - name: configure md5 security Debian
      become: yes
      copy: src=pg_hba.conf dest=/etc/postgresql/{{ postgres_version.stdout }}/main/pg_hba.conf group=postgres owner=postgres backup=yes

    - name: restart postgres server
      become: yes
      service: name=postgresql enabled=yes state=restarted
